{"remainingRequest":"/home/antz/vscode/Web/onefocus/vue-focus/node_modules/babel-loader/lib/index.js!/home/antz/vscode/Web/onefocus/vue-focus/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/antz/vscode/Web/onefocus/vue-focus/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/antz/vscode/Web/onefocus/vue-focus/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/antz/vscode/Web/onefocus/vue-focus/src/App.vue?vue&type=template&id=7ba5bd90","dependencies":[{"path":"/home/antz/vscode/Web/onefocus/vue-focus/src/App.vue","mtime":1621352990144},{"path":"/home/antz/vscode/Web/onefocus/vue-focus/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/antz/vscode/Web/onefocus/vue-focus/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/antz/vscode/Web/onefocus/vue-focus/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/home/antz/vscode/Web/onefocus/vue-focus/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/antz/vscode/Web/onefocus/vue-focus/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrIH0gZnJvbSAidnVlIjsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9OYXZCYXIgPSBfcmVzb2x2ZUNvbXBvbmVudCgiTmF2QmFyIik7CgogIHZhciBfY29tcG9uZW50X3JvdXRlcl92aWV3ID0gX3Jlc29sdmVDb21wb25lbnQoInJvdXRlci12aWV3Iik7CgogIHZhciBfY29tcG9uZW50X3Z1ZV9wcm9ncmVzc19iYXIgPSBfcmVzb2x2ZUNvbXBvbmVudCgidnVlLXByb2dyZXNzLWJhciIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIG51bGwsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9OYXZCYXIpLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9yb3V0ZXJfdmlldyksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X3Z1ZV9wcm9ncmVzc19iYXIpXSk7Cn0="},{"version":3,"sources":["/home/antz/vscode/Web/onefocus/vue-focus/src/App.vue"],"names":[],"mappings":";;;;;;;;uBACE,YAAA,CAIM,KAJN,EAIM,IAJN,EAIM,CAHJ,YAAA,CAAU,iBAAV,CAGI,EAFJ,YAAA,CAAc,sBAAd,CAEI,EADJ,YAAA,CAAqC,2BAArC,CACI,CAJN,C","sourcesContent":["<template>\n  <div>\n    <NavBar />\n    <router-view/>\n    <vue-progress-bar></vue-progress-bar>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport NavBar from '@/components/NavBar.vue'\n\nexport default {\n  name: 'Home',\n  components: {\n    NavBar\n  },\n  mounted () {\n    //  [App.vue specific] When App.vue is finish loading finish the progress bar\n    this.$Progress.finish()\n    document.title = \"OneFocus\"\n  },\n  created () {\n    //  [App.vue specific] When App.vue is first loaded start the progress bar\n    this.$Progress.start()\n    //  hook the progress bar to start before we move router-view\n    this.$router.beforeEach((to, from, next) => {\n      //  does the page we want to go to have a meta.progress object\n      if (to.meta.progress !== undefined) {\n        let meta = to.meta.progress\n        // parse meta tags\n        this.$Progress.parseMeta(meta)\n      }\n      //  start the progress bar\n      this.$Progress.start()\n      //  continue to next page\n      next()\n    })\n    //  hook the progress bar to finish after we've finished moving router-view\n    this.$router.afterEach((to, from) => {\n      //  finish the progress bar\n      this.$Progress.finish()\n    })\n  }\n}\n</script>\n\n<style>\n\n\n</style>\n"],"sourceRoot":""}]}